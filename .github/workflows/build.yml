on: [push]
name: Build
jobs:
  build:
    strategy:
      matrix:
        go-version: [1.18.x]
        node-version: [18]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      # build the frontend
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm --prefix ./frontend install
      - run: npm --prefix ./frontend run build
      - run: tar -cvf ./dist/frontend.tgz -C frontend/build .

      # build the binary
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - run: mkdir -p dist/
      - run: go mod tidy && CGO_ENABLED=1 GOARCH=amd64 GOOS=linux go build -o dist/craig-stars main.go
      - run: tar -cvf ./dist/craig-stars ./dist/craig-stars.tgz

      - uses: actions/upload-artifact@v3
        with:
          name: dist-artifact
          path: ./dist/

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: dist-artifact
          path: ./dist/
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: ./dist/

      - name: Create latest Release
        id: create_release
        uses: ncipollo/release-action@v1.8.10
        with:
          name: latest
          tag: latest
          body: ''
          prerelease: true
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}

      # upload the front end
      - name: Upload Release Assets - Server
        id: upload-release-asset-server
        uses: WebFreak001/deploy-nightly@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # automatically provided by github actions
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }}
          release_id: ${{ needs.release.outputs.release_id }}
          asset_path: ./dist/frontend.tgz
          asset_name: frontend.tgz
          asset_content_type: application/zip
          max_releases: 5

      # upload the server
      - name: Upload Release Assets - Server
        id: upload-release-asset
        uses: WebFreak001/deploy-nightly@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # automatically provided by github actions
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }}
          release_id: ${{ needs.release.outputs.release_id }}
          asset_path: ./dist/craig-stars.tgz
          asset_name: craig-stars.tgz
          asset_content_type: application/zip
          max_releases: 5
