name: Test
on: 
  pull_request:
    branches:
      - 'develop'
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.20.x]
        node-version: [18]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      # build the binary (fast)
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true
          cache: true
      # the go binary embeds the front end, so create a mock one for quick unit tests
      - run: mkdir -p frontend/build
      - run: touch frontend/build/testfile
      - run: go test ./...          
      - run: mkdir -p dist/
      - run: go mod tidy && CGO_ENABLED=1 GOARCH=amd64 GOOS=linux go build -ldflags='-s -w -extldflags "-static"' -o dist/craig-stars main.go

      # build the frontend (slow)
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: frontend/package.lock
      - run: npm install
        working-directory: ./frontend
      - run: npm run test
        working-directory: ./frontend
      - run: npm run build
        working-directory: ./frontend
  